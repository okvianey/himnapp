{"version":3,"file":"component---src-pages-himno-index-js-27af785e6390fd650a36.js","mappings":"kQAcA,MAAMA,GAAkBC,EAAAA,EAAAA,IAAO,MAAPA,EAAcC,IAAA,IAAC,MAAEC,GAAOD,EAAA,MAAM,CACpDE,QAAS,GACTC,OAAQ,kBACRC,QAAS,OACTC,eAAgB,eAChBC,WAAY,SACZ,CAAEL,EAAMM,YAAYC,KAAK,OAAS,CAChCC,cAAe,SACfH,WAAY,cAEf,IAkEYI,EAAOA,IAAMC,EAAAA,cAACC,EAAAA,EAAG,CAACC,MAAM,oBAErC,UAlEqBC,IAAe,IAAd,KAAEC,GAAMD,EAE5B,MAAOE,EAAUC,GAAeN,EAAAA,SAAeI,EAAKG,OAAOC,OAY3D,OACER,EAAAA,cAACS,EAAAA,QAAM,CAACC,UAAU,iBAChBV,EAAAA,cAACW,EAAAA,EAAG,CAACC,UAAU,6BAEbZ,EAAAA,cAACb,EAAe,KACda,EAAAA,cAACa,EAAAA,EAAU,CAACC,QAAQ,KAAKC,GAAI,GAAG,mBAChCf,EAAAA,cAACgB,EAAAA,EAAS,CAACC,aAfGC,SAkBhBlB,EAAAA,cAACmB,EAAAA,EAAI,CAACC,GAAI,CAAEC,QAAS,mBAAoBC,SAAU,SAClDjB,EAASkB,KAAKC,IACb,MAAMC,EAAQD,EAAKE,GAEnB,MAA8B,MAA1BF,EAAKG,YAAYC,KACZ5B,EAAAA,cAAC6B,EAAAA,GAAQ,CAACC,IAAKL,IAGpBzB,EAAAA,cAAC6B,EAAAA,GAAQ,CAACC,IAAKL,EAAOM,gBAAc,EAACC,SAAO,GAC1ChC,EAAAA,cAACiC,EAAAA,EAAc,CACbC,MAAM,UACNC,UAAWC,EAAAA,KACXC,GAAE,UAAYb,EAAKG,YAAYC,MAE9BJ,EAAKG,YAAYzB,OAI1B,MAKG,C","sources":["webpack://himnapp/./src/pages/himno/index.js"],"sourcesContent":["import * as React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport Layout from '../../components/layout';\nimport Seo from '../../components/seo';\nimport SearchBar from \"../../components/searchBar\";\nimport { styled } from \"@mui/material/styles\";\nimport {\n  Box,\n  Typography,\n  List,\n  ListItem,\n  ListItemButton,\n} from \"@mui/material\";\n\nconst StyledSearchBox = styled(\"div\")(({ theme }) => ({\n  padding: 20,\n  border: \"1px dashed grey\",\n  display: \"flex\",\n  justifyContent: \"space-evenly\",\n  alignItems: \"center\",\n  [ theme.breakpoints.down(\"sm\") ]: {\n    flexDirection: \"column\",\n    alignItems: \"flex-start\",\n  },\n}));\n\nconst HimnarioPage = ({ data }) => {\n  // const himnarioCompleto = data.allMdx.nodes;\n  const [himnario, setHimnario] = React.useState(data.allMdx.nodes);\n\n\n  const handleSearch = (e) => {\n    // e.preventDefault();\n    // let checkWord = \"\" + e.target.value.toUpperCase();\n    // let himnosFiltrados = himnarioCompleto.filter((himno) =>\n    //   himno.frontmatter.title.includes(checkWord)\n    // );\n    // setHimnario(himnosFiltrados);\n  };\n\n  return (\n    <Layout pageTitle=\"My Blog Posts\">\n      <Box className=\"hymns-list-with-favorites\">\n        {/*Search Bar  */}\n        <StyledSearchBox>\n          <Typography variant=\"h1\" mb={2}> Buscar himno: </Typography>\n          <SearchBar handleSearch={handleSearch} />\n        </StyledSearchBox>\n\n        <List sx={{ bgcolor: \"background.paper\", overflow: \"auto\" }}>\n        {himnario.map((node) => {\n          const keyId = node.id;\n\n          if (node.frontmatter.slug === \"0\") {\n            return <ListItem key={keyId}></ListItem>;\n          } else {\n            return (\n              <ListItem key={keyId} disablePadding divider>\n                <ListItemButton\n                  color=\"inherit\"\n                  component={Link}\n                  to={`/himno/${node.frontmatter.slug}`}\n                >\n                  {node.frontmatter.title}\n                </ListItemButton>\n              </ListItem>\n            );\n          }\n        })}\n      </List>\n\n      </Box>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n  allMdx(sort: {frontmatter: {order: ASC}}) {\n    nodes {\n      frontmatter {\n        title\n        slug\n        order\n      }\n      id\n    }\n  }\n}`\n\nexport const Head = () => <Seo title=\"Lista de himnos\" />\n\nexport default HimnarioPage"],"names":["StyledSearchBox","styled","_ref","theme","padding","border","display","justifyContent","alignItems","breakpoints","down","flexDirection","Head","React","Seo","title","_ref2","data","himnario","setHimnario","allMdx","nodes","Layout","pageTitle","Box","className","Typography","variant","mb","SearchBar","handleSearch","e","List","sx","bgcolor","overflow","map","node","keyId","id","frontmatter","slug","ListItem","key","disablePadding","divider","ListItemButton","color","component","Link","to"],"sourceRoot":""}